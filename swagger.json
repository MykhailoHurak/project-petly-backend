{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Swagger test",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://petly-service-backend.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Friends",
      "description": "Friends endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets endpoints"
    }
  ],

  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "User current",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/users/current/update": {
      "put": {
        "tags": ["Users"],
        "summary": "Update user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's info object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateInfoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/news": {
      "get": {
        "tags": ["News"],
        "summary": "Getting news on page",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/our_friends": {
      "get": {
        "tags": ["Friends"],
        "summary": "Getting list companies on page",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendsListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/notices/notice": {
      "post": {
        "tags": ["Notices"],
        "summary": "Create notice",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Notice's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNoticeRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/notices/favorite/{noticeId}": {
      "post": {
        "tags": ["Notices"],
        "summary": "Add notice to favorite",
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": "true",
            "type": "string",
            "description": "id of notice"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNoticeToFavoriteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      },

      "delete": {
        "tags": ["Notices"],
        "summary": "Remove notice from favorite",
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": "true",
            "type": "string",
            "description": "id of favorite notice"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/notices/category/favorite": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get favorite notices",
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteNoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/notices/favorite": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get id of favorite notices",
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/notices/notice/{noticeId}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get info about pet by id",
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": "true",
            "type": "string",
            "description": "id of notice"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteNoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      },

      "delete": {
        "tags": ["Notices"],
        "summary": "Remove notice by id",
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": "true",
            "type": "string",
            "description": "id of notice"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/notices/category/{category}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get the same categories of notices",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": "true",
            "type": "string",
            "description": "category of notice"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesByCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/notices/category/own": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get only that notices that were created by user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesByCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/profile": {
      "post": {
        "tags": ["Pets"],
        "summary": "Adds info about user's pet",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Pets's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      },

      "get": {
        "tags": ["Pets"],
        "summary": "Show user's profile and his pets",
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/profile/{petId}": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Delete pet by id from user list",
        "parameters": [
          {
            "in": "path",
            "name": "petId",
            "required": "true",
            "type": "string",
            "description": "id of notice user's pet"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name", "city", "phone"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Pedro Gonsalez"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Barcelona, Catalonia"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+7930-345-23-12"
          }
        }
      },

      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Pedro Gonsalez"
              },
              "city": {
                "type": "string",
                "description": "User's city",
                "example": "Barcelona, Catalonia"
              },
              "phone": {
                "type": "string",
                "description": "User's phone number",
                "example": "+7930-345-23-12"
              }
            }
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },

      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUz.I1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MWM2Z"
          }
        }
      },

      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "User's message",
            "example": "user is logout"
          }
        }
      },

      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "carlitto@mail.com"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Carlos Kastaneda"
              },
              "id": {
                "type": "string",
                "description": "User's id",
                "example": "641c65543edee93120a7a83a"
              }
            }
          }
        }
      },

      "UserUpdateInfoRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Roberto Baggio"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "New York"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+5670-456-12-45"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "12/12/1990"
          },
          "photo": {
            "type": "string",
            "description": "User's photo url",
            "example": "http://res.cloudinary.com/h_225,w_225/18387fa2f662a9d5a.jpg"
          }
        }
      },

      "UserUpdateInfoResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "6422fd65173e7dfe3ba7a689"
          },

          "token": {
            "type": "string",
            "description": "User's token",
            "example": "6422fd65173e7dfe3ba7a689.aedfad908asd.c6978asydc89.sdfsdf"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Roberto Baggio"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "New York"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+5670-456-12-45"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "12/12/1990"
          },
          "photo": {
            "type": "string",
            "description": "User's photo url",
            "example": "http://res.cloudinary.com/h_225,w_225/18387fa2f662a9d5a.jpg"
          }
        }
      },

      "NewsListResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewsObjectResponse"
            }
          }
        }
      },

      "NewsObjectResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "News id",
            "example": "6416d46955c9817f6bc918a6"
          },
          "title": {
            "type": "string",
            "description": "News title",
            "example": "Human of year"
          },
          "url": {
            "type": "string",
            "description": "News url",
            "example": "https://www.kmlvm.human-of-year"
          },
          "description": {
            "type": "string",
            "description": "News text",
            "example": "This year we have a new..."
          }
        }
      },

      "FriendsListResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Company's id",
            "example": "6416d46955c9817f6bc918a6"
          },
          "title": {
            "type": "string",
            "description": "Company's name",
            "example": "Wiskas"
          },
          "url": {
            "type": "string",
            "description": "Company's site",
            "example": "https://www.wiskas.com"
          },
          "adressUrl": {
            "type": "string",
            "description": "Company's adress reference",
            "example": "https://goo.gl/maps/iq8NXEUf31EAQCzc6"
          },
          "imageUrl": {
            "type": "string",
            "description": "Company's logo url",
            "example": "https://storage.googleapis.com/pets-support/images/_287.png"
          },
          "adress": {
            "type": "string",
            "description": "Company's adress",
            "example": "Kyiv, Ukraine"
          },
          "workDays": {
            "type": "array",
            "description": "work day's of company",
            "example": [
              {
                "isOpen": true,
                "from": "11:00",
                "to": "16:00"
              },
              {
                "isOpen": true,
                "from": "11:00",
                "to": "16:00"
              }
            ]
          }
        }
      },
      "AddNoticeRequest": {
        "type": "object",
        "required": [
          "title",
          "name",
          "birthday",
          "breed",
          "location",
          "sex",
          "category"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Pet title description",
            "example": "Pretty dog"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Richi"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birhday",
            "example": "12/12/22"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "pincher"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Kyiv"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex",
            "example": "male"
          },
          "category": {
            "type": "string",
            "description": "Pet's category",
            "example": "sell"
          },

          "imgUrl": {
            "type": "string",
            "description": "Pet's photo url",
            "example": "url/sdfsda32422232/sdf"
          }
        }
      },

      "AddNoticeResponse": {
        "type": "object",
        "properties": {
          "newNotice": {
            "type": "object",
            "properties": {
              "category": {
                "type": "string",
                "description": "Pet's category",
                "example": "sell"
              },
              "title": {
                "type": "string",
                "description": "Pet title description",
                "example": "Pretty dog"
              },
              "name": {
                "type": "string",
                "description": "Pet's name",
                "example": "Richi"
              },
              "breed": {
                "type": "string",
                "description": "Pet's breed",
                "example": "pincher"
              },
              "sex": {
                "type": "string",
                "description": "Pet's sex",
                "example": "male"
              },
              "location": {
                "type": "string",
                "description": "Pet's location",
                "example": "Kyiv"
              },
              "imgUrl": {
                "type": "string",
                "description": "Pet's photo url",
                "example": "url/sdfsda32422232/sdf"
              },
              "owner": {
                "type": "string",
                "description": "Pet's owner id",
                "example": "64230746b4e28197ad9b53ab"
              },

              "_id": {
                "type": "string",
                "description": "Notice's id",
                "example": "6422fd65173e7dfe3ba7a689"
              }
            }
          }
        }
      },

      "AddNoticeToFavoriteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "notice has been added to favorite"
          }
        }
      },
      "FavoriteNoticesResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Notice's id",
            "example": "64230a74a7de8a18995d0fac"
          },
          "ctaegory": {
            "type": "string",
            "description": "category's type",
            "example": "lost found"
          },

          "title": {
            "type": "string",
            "description": "notice's title /",
            "example": "Lost Pinguin"
          },
          "name": {
            "type": "string",
            "description": "pet's name",
            "example": "Masyasya"
          },
          "bread": {
            "type": "string",
            "description": "bread of pet",
            "example": "mperial Pinguin"
          },
          "sex": {
            "type": "string",
            "description": "sex of pet",
            "example": "male"
          },
          "location": {
            "type": "string",
            "description": "location of pet",
            "example": "Narniya"
          },
          "imgUrl": {
            "type": "string",
            "description": "picture of pet",
            "example": "http://res.cloudinary.com/dwnz8nya4/image/d69ec67.jpg"
          },
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "user id",
                "example": "6422fd65173e7dfe3ba7a689"
              },
              "name": {
                "type": "string",
                "description": "user name",
                "example": "Alex"
              },
              "email": {
                "type": "string",
                "description": "user email",
                "example": "alex@mail.com"
              },
              "phone": {
                "type": "string",
                "description": "user phonr",
                "example": "123-34-45"
              }
            }
          }
        }
      },

      "DeleteNoticeResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Notice has been removed from favorites"
          }
        }
      },

      "AddPetRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "pet's name",
            "example": "Lilu"
          },
          "date": {
            "type": "string",
            "description": "pet's birthday",
            "example": "12/12/22"
          },
          "breed": {
            "type": "string",
            "description": "pet's breed",
            "example": "maltipou"
          },
          "comments": {
            "type": "string",
            "description": "comment about pet",
            "example": "very good dog"
          }
        }
      },

      "AddPetResponse": {
        "type": "object",
        "properties": {
          "petList": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "pet's name",
                "example": "Lilu"
              },
              "date": {
                "type": "string",
                "description": "pet's birthday",
                "example": "12/12/22"
              },
              "breed": {
                "type": "string",
                "description": "pet's breed",
                "example": "maltipou"
              },
              "comments": {
                "type": "string",
                "description": "comment about pet",
                "example": "very good dog"
              },
              "owner": {
                "type": "string",
                "description": "owner's id",
                "example": "641f13e0f04c9c7db2350197"
              },
              "petsImageUrl": {
                "type": "string",
                "description": "owner's id",
                "example": "url/3e0f04c9c7db2350197.img.jpg"
              }
            }
          }
        }
      },

      "ProfilePetResponse": {
        "type": "object",
        "properties": {
          "yourPets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PetResponse"
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Pedro Gonsalez"
              },
              "city": {
                "type": "string",
                "description": "User's city",
                "example": "Barcelona, Catalonia"
              },
              "phone": {
                "type": "string",
                "description": "User's phone number",
                "example": "+7930-345-23-12"
              }
            }
          }
        }
      },

      "PetResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "pet's id",
            "example": "khg2345324lkjh2l34jhgjl234"
          },
          "name": {
            "type": "string",
            "description": "pet's name",
            "example": "Lilu"
          },
          "date": {
            "type": "string",
            "description": "pet's birthday",
            "example": "12/12/22"
          },
          "breed": {
            "type": "string",
            "description": "pet's breed",
            "example": "maltipou"
          },
          "comments": {
            "type": "string",
            "description": "comment about pet",
            "example": "very good dog"
          },
          "owner": {
            "type": "string",
            "description": "owner's id",
            "example": "641f13e0f04c9c7db2350197"
          },
          "petsImageUrl": {
            "type": "string",
            "description": "owner's id",
            "example": "url/3e0f04c9c7db2350197.img.jpg"
          }
        }
      },

      "FavoriteIdResponse": {
        "type": "object",
        "properties": {
          "favorite": {
            "type": "array",
            "items": {
              "id": {
                "type": "string",
                "example": "sdf987sdfc98syf79y9n8Vb0yVv"
              }
            }
          }
        }
      },

      "NoticesByCategoryResponse": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NoticesByCategoryObjectResponse"
            }
          }
        }
      },

      "NoticesByCategoryObjectResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "id of pet",
            "example": "641dd0168f83a3937bf63d1e"
          },
          "cataegory": {
            "type": "string",
            "description": "category for sale",
            "example": "lost found"
          },

          "title": {
            "type": "string",
            "example": "Lost Pinguin"
          },
          "name": {
            "type": "string",
            "example": "Masyasya"
          },
          "bread": {
            "type": "string",
            "example": "mperial Pinguin"
          },
          "sex": {
            "type": "string",
            "example": "male"
          },
          "location": {
            "type": "string",
            "example": "Narniya"
          },
          "imgUrl": {
            "type": "string",
            "example": "http://res.cloudinary.com/dwnz8nya4/image/d69ec67.jpg"
          },
          "owner": {
            "type": "string",
            "description": "owner's id",
            "example": "641daf7632873642d30f8c2d"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
